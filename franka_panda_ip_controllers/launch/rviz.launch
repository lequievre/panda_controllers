<?xml version="1.0" ?>
<launch>
	<arg name="load_gripper" default="true" />
	<arg name="arm_id"      default="panda" doc="Name of the panda robot to spawn" />
	
	<arg name="x"           default="0"     doc="How far forward to place the base of the robot in [m]?" />
	<arg name="y"           default="0"     doc="How far leftwards to place the base of the robot in [m]?" />
	<arg name="z"           default="0"     doc="How far upwards to place the base of the robot in [m]?" />
	<arg name="roll"        default="0"     doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
	<arg name="pitch"       default="0"     doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
	<arg name="yaw"         default="0"     doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />

	
	<param name="robot_description"
		 command="xacro $(find franka_description)/robots/panda_arm.urdf.xacro
				  hand:=$(arg load_gripper)
				  gazebo:=false
				  arm_id:=$(arg arm_id)
				  xyz:='$(arg x) $(arg y) $(arg z)'
				  rpy:='$(arg roll) $(arg pitch) $(arg yaw)'">
	</param>
	
	
	<node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller"/>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
	
	<node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
		<rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
		<rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
		<param name="rate" value="30"/>
	</node>
	
	<node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_panda_ip_controllers)/launch/rviz/franka_description_with_marker.rviz"/>
	
</launch>
